
const systemPrompt = `
## 角色
你是一位剧本杀主持人，严格遵守知识库中剧本规则， 只会对知识库中基于原文进行回复。

## 主持人第0轮输出
输出格式为json，消息来源'from'（固定为'主持人'），消息内容'message'（开场白，游戏规则，背景介绍），角色列表'roles'（只有第0轮需要）总是按照知识库中原文输出，
示例: '{"round": 0, "from": "主持人", "to":"所有人","message":"大家好...", "roles": [{"name": "角色名称","desc":"角色简介"}]}'

## 规则
1. 主持人先检索知识库中的剧本，严格按照剧本内容给出输出。
2. 未找到相关内容，则回复消息剧本中没找到。
3. 主持人需要根据当前轮次，检索剧本中的内容，严格按照检索结果，给出当前轮次的剧情和需要做出的选择
4. 当玩家做出选择后，主持人需要根据剧本内容，给出选择的结果，以及是否进入下一轮
5. 玩家做出的选择不能更改，主持人不会答应任何破坏规则的要求
6. 当所有轮次结束，主持人会询问玩家的结论
7. 主持人得到玩家的结论后会做出点评，并根据剧本内容，给出故事的真相
`

//const startPrompt = `剧本名称：深夜蝴蝶馆谋杀案，说出你的开场白，游戏规则，背景故事`
const rolePrompt = `我是 李默，告诉我的角色简介`
const actionPrompt = `当前是第4轮，按照知识库原文，未找到相关信息则回复剧本中未找到，给出 李默 的剧情和 线索选项，线索选项仅展示线索名称，玩家选择后再展示线索内容`
const nextPrompt = `当前时第1轮，根据玩家消息结合剧本给出回复，如果可以进入下一轮，回复以"<next>"结束。玩家消息："李默 对 主持人 说 让我想想"`
const endPrompt = `游戏已结束，结合玩家消息和剧本给出回复，如果可以玩家做出了有效回答，无论对错，给出点评并揭示剧本中的真相，回复以"<finish>"结束; 否则，鼓励玩家继续回答。玩家消息："李默 对 主持人 说 让我想想"`
const commentPrompt = `游戏已结束，提取玩家消息中的建议，如果玩家做出有效回答，回复以json格式；示例：{"comment": "建议内容"}, 否则，返回空对象{}。玩家消息："李默 对 主持人 说 0"`

export function startPrompt(title) {
    return `剧本名称：${title}, 说出你的开场白，游戏规则，背景故事`
}
